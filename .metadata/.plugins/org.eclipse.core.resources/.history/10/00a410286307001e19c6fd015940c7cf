package restaurantRankingProgram;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.border.EmptyBorder;
import javax.swing.SwingConstants;

public class signUpPage  extends JFrame{
	private JPanel contentPane;
	private JPanel firstRow;
	private JPanel secondRow;
	private JPanel thirdRow;
	private JTextArea inputID;
	private JTextArea inputNick;
	private JTextArea inputPW;
	private JTextArea inputRePW;
	private JTextArea freeInfo;
	private JRadioButton studentBtn;
	private JRadioButton managerBtn;
	
	private JButton submitBtn;
	
		
	public signUpPage() {
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 700, 600);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setTitle("sign up page");
		setContentPane(contentPane);
		
		firstRow = new JPanel();
		secondRow = new JPanel();
		thirdRow = new JPanel();
		contentPane.setLayout(new GridLayout(3,1));
		firstRow.setLayout(new GridLayout(1,3));
		String imagePath = "사람.png";
		ImageIcon picture = new ImageIcon(getClass().getResource(imagePath));
		Image image = picture.getImage();
		Image changeImage = image.getScaledInstance(200, 300, Image.SCALE_SMOOTH); //adjusting size of image
		ImageIcon changePicture = new ImageIcon(changeImage);
		JLabel humanImage = new JLabel(changePicture);
		firstRow.add(humanImage);
		
		JPanel btnPanel = new JPanel(new GridLayout(1,2));
		JPanel infoLabel = new JPanel(new GridLayout(5,1));
		
		studentBtn = new JRadioButton("student");
		managerBtn = new JRadioButton("manager");
		
		ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(studentBtn);
        buttonGroup.add(managerBtn);
        
        btnPanel.add(studentBtn);
        btnPanel.add(managerBtn);
        
        infoLabel.add(btnPanel);
        
		JLabel studentID = new JLabel("student ID");
		studentID.setHorizontalAlignment(SwingConstants.CENTER);
		studentID.setFont(new Font("굴림", Font.BOLD, 13));
		JLabel nickName = new JLabel("nick name:");
		nickName.setFont(new Font("굴림", Font.BOLD, 12));
		nickName.setHorizontalAlignment(SwingConstants.CENTER);
		JLabel studentPW = new JLabel("student PW:");
		studentPW.setFont(new Font("굴림", Font.BOLD, 12));
		studentPW.setHorizontalAlignment(SwingConstants.CENTER);
		JLabel checkPW = new JLabel("check PW:");
		checkPW.setHorizontalAlignment(SwingConstants.CENTER);
		checkPW.setFont(new Font("굴림", Font.BOLD, 12));
		
		infoLabel.add(studentID);
		infoLabel.add(nickName);
		infoLabel.add(studentPW);
		infoLabel.add(checkPW);
		firstRow.add(infoLabel);
		
		JPanel infoInput = new JPanel(new GridLayout(4,1));
		inputID = new JTextArea();
		inputNick = new JTextArea();
		inputPW = new JTextArea();
		inputRePW = new JTextArea();
		
		infoInput.add(inputID);
		infoInput.add(inputNick);
		infoInput.add(inputPW);
		infoInput.add(inputRePW);
		firstRow.add(infoInput);
		
		contentPane.add(firstRow);
		
		secondRow.setLayout(new GridLayout(2,1));
		JLabel infoExplain = new JLabel("explain about you(belong to, your best restaurant, farovite food...)");
		infoExplain.setFont(new Font("굴림", Font.BOLD, 15));
		freeInfo = new JTextArea();
		
		secondRow.add(infoExplain);
		secondRow.add(freeInfo);
		
		contentPane.add(secondRow);
		
		thirdRow.setLayout(new GridLayout(3,1));
		JPanel emptyPanel1 = new JPanel();
		JPanel emptyPanel2 = new JPanel();
		
		JPanel btnPanel = new JPanel(new GridLayout(1,3));
		JLabel emptyLabel1 = new JLabel("");
		JLabel emptyLabel2 = new JLabel("");
		submitBtn = new JButton("SUBMIT");
		submitBtn.setForeground(new Color(255, 0, 0));
		submitBtn.setFont(new Font("Bodoni MT", Font.BOLD, 15));
		
		ButtonHandler handler = new ButtonHandler();
		submitBtn.addActionListener(handler);
		
		btnPanel.add(emptyLabel1);
		btnPanel.add(submitBtn);
		btnPanel.add(emptyLabel2);
		
		thirdRow.add(emptyPanel1);
		thirdRow.add(btnPanel);
		thirdRow.add(emptyPanel2);
		
		contentPane.add(thirdRow);
	}
	
	class ButtonHandler implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent e) {
			
			class EmptyException extends Exception {
			    public EmptyException() {
			    }
			}
			
			class NoCorrectException extends Exception {
			    public NoCorrectException() {
			    }
			}
			
			if (e.getSource() == submitBtn) {
				String resultErr = "";
				int count = 0;
				int error = 0;
				student newStudent = new student();
				String id = inputID.getText();
				try {
					if (id.isEmpty()) {
						throw new EmptyException();
					}
					newStudent.setStudentID(id);
				}
				catch (EmptyException exception){
					error = 1;
					count += 1;
					resultErr += String.format("%d. You forgot to fill the id text field, Please fill it.\n", count);
					
				}
				
				String nickName = inputNick.getText();
				try {
					if (nickName.isEmpty()) {
						throw new EmptyException();
					}
					newStudent.setNickName(nickName);
				}
				catch (EmptyException exception) {
					error = 1;
					count += 1;
					resultErr += String.format("%d. You forgot to fill the nick name text field, Please fill it.\n", count);
				}
				
				String password = inputPW.getText(); //for storing the text of name text field
				String rePassword = inputRePW.getText();
				
				try {
					if (password.isEmpty() || rePassword.isEmpty()) {
						throw new EmptyException(); //throwing the empty exception
					}
					
					/*condition whether name includes the first name and last name*/
					if (password.length() < 4 || rePassword.length() < 4) {
						throw new Exception();
					}
					if (!password.equals(rePassword)) {
						throw new NoCorrectException();
					}
					newStudent.setStudentPW(inputPW.getText());

					
				} catch (EmptyException exception) {
					error = 1;
					count += 1;
					resultErr += String.format("%d. You forgot to fill the password text field, Please fill it.\n", count); //adding the empty field error message
					
				} catch (NoCorrectException exception) {
					error = 1;
					count += 1;
					resultErr += String.format("%d. Password didn't correct the check password.\n", count); //adding the name error message
					
				} catch (Exception exception) {
					error = 1;
					count += 1;
					resultErr += String.format("%d. Password must be longer than 4.\n", count); //adding the name error message
					
				} 
				
				newStudent.setFreeInfo(freeInfo.getText());
				
				if (error == 0) {
					programData.getInstance().addStudent(newStudent);
					
					inputID.setText("");
					inputNick.setText("");
					inputPW.setText("");
					freeInfo.setText("");
					JOptionPane.showMessageDialog(null, "You submitted finally.", "Notification", JOptionPane.INFORMATION_MESSAGE);
				}
				else {
					JOptionPane.showMessageDialog(null, resultErr, "Error", JOptionPane.ERROR_MESSAGE);
				}
				
	        }
		}
	}
}
